services:
  db:
    image: postgres:14-alpine3.15
    container_name: legal_db
    ports:
      - '${POSTGRES_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB_DATABASE:-legal}
      POSTGRES_USER: ${POSTGRES_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASS:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_DB_USER:-postgres} -d ${POSTGRES_DB_DATABASE:-legal}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - legal
    restart: unless-stopped

  backend:
    container_name: legal_backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET:-dev_local_secret_change_me}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      DATABASE_URL: postgresql://${POSTGRES_DB_USER:-postgres}:${POSTGRES_DB_PASS:-postgres}@db:5432/${POSTGRES_DB_DATABASE:-legal}?schema=public
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/docs').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 30
    networks:
      - legal
    restart: unless-stopped

  frontend:
    container_name: legal_frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NODE_ENV: production
      NITRO_PORT: 3001
      PORT: 3001
      NUXT_PUBLIC_EXTERNAL_API_BASE: http://backend:3000
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3001').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 30
    networks:
      - legal
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  legal:
    driver: bridge